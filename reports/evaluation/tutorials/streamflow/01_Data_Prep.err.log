Traceback (most recent call last):
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Step 4c (continued): write the template with specific encodings
outfile = fs_write.get_mapper(fname)
template.to_zarr(
    outfile,
    compute=False,
    encoding =  {                                  # encodings sets data types for the disk store
        'station_nm':  dict( _FillValue=None,        dtype='<U64'), 
        'alt_datum_cd':dict( _FillValue=None,        dtype='<U6'),
        'alt_acy_va':  dict( _FillValue=-2147483647, dtype=np.int32),
        'alt_va':      dict( _FillValue=9.96921e+36, dtype=np.float32),
        'dec_lat_va':  dict( _FillValue=None,        dtype=np.float32),
        'dec_long_va': dict( _FillValue=None,        dtype=np.float32),
        'streamflow':  dict( _FillValue=9.96921e+36, dtype=np.float32)
    },
    consolidated=True,                             # Consolidate metadata
    mode='w'
)
------------------


[31m---------------------------------------------------------------------------[39m
[31mClientError[39m                               Traceback (most recent call last)
[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/s3fs/core.py:114[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    113[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m114[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func(*args, **kwargs)
[32m    115[39m [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/aiobotocore/context.py:36[39m, in [36mwith_current_context.<locals>.decorator.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m     35[39m     [38;5;28;01mawait[39;00m resolve_awaitable(hook())
[32m---> [39m[32m36[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func(*args, **kwargs)

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/aiobotocore/client.py:415[39m, in [36mAioBaseClient._make_api_call[39m[34m(self, operation_name, api_params)[39m
[32m    414[39m     error_class = [38;5;28mself[39m.exceptions.from_code(error_code)
[32m--> [39m[32m415[39m     [38;5;28;01mraise[39;00m error_class(parsed_response, operation_name)
[32m    416[39m [38;5;28;01melse[39;00m:

[31mClientError[39m: An error occurred (MissingContentLength) when calling the PutObject operation: Unknown

The above exception was the direct cause of the following exception:

[31mOSError[39m                                   Traceback (most recent call last)
[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/zarr/storage.py:1470[39m, in [36mFSStore.__setitem__[39m[34m(self, key, value)[39m
[32m   1469[39m     [38;5;28mself[39m.fs.rm(path, recursive=[38;5;28;01mTrue[39;00m)
[32m-> [39m[32m1470[39m [38;5;28;43mself[39;49m[43m.[49m[43mmap[49m[43m[[49m[43mkey[49m[43m][49m = value
[32m   1471[39m [38;5;28mself[39m.fs.invalidate_cache([38;5;28mself[39m.fs._parent(path))

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/fsspec/mapping.py:175[39m, in [36mFSMap.__setitem__[39m[34m(self, key, value)[39m
[32m    174[39m [38;5;28mself[39m.fs.mkdirs([38;5;28mself[39m.fs._parent(key), exist_ok=[38;5;28;01mTrue[39;00m)
[32m--> [39m[32m175[39m [38;5;28;43mself[39;49m[43m.[49m[43mfs[49m[43m.[49m[43mpipe_file[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43mmaybe_convert[49m[43m([49m[43mvalue[49m[43m)[49m[43m)[49m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/fsspec/asyn.py:118[39m, in [36msync_wrapper.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    117[39m [38;5;28mself[39m = obj [38;5;129;01mor[39;00m args[[32m0[39m]
[32m--> [39m[32m118[39m [38;5;28;01mreturn[39;00m [43msync[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mloop[49m[43m,[49m[43m [49m[43mfunc[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/fsspec/asyn.py:103[39m, in [36msync[39m[34m(loop, func, timeout, *args, **kwargs)[39m
[32m    102[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[32m--> [39m[32m103[39m     [38;5;28;01mraise[39;00m return_result
[32m    104[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/fsspec/asyn.py:56[39m, in [36m_runner[39m[34m(event, coro, result, timeout)[39m
[32m     55[39m [38;5;28;01mtry[39;00m:
[32m---> [39m[32m56[39m     result[[32m0[39m] = [38;5;28;01mawait[39;00m coro
[32m     57[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/s3fs/core.py:1183[39m, in [36mS3FileSystem._pipe_file[39m[34m(self, path, data, chunksize, max_concurrency, mode, **kwargs)[39m
[32m   1182[39m [38;5;28;01mif[39;00m size < [38;5;28mmin[39m([32m5[39m * [32m2[39m**[32m30[39m, [32m2[39m * chunksize):
[32m-> [39m[32m1183[39m     out = [38;5;28;01mawait[39;00m [38;5;28mself[39m._call_s3(
[32m   1184[39m         [33m"[39m[33mput_object[39m[33m"[39m, Bucket=bucket, Key=key, Body=data, **kwargs, **match
[32m   1185[39m     )
[32m   1186[39m     [38;5;28mself[39m.invalidate_cache(path)

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/s3fs/core.py:371[39m, in [36mS3FileSystem._call_s3[39m[34m(self, method, *akwarglist, **kwargs)[39m
[32m    370[39m additional_kwargs = [38;5;28mself[39m._get_s3_method_kwargs(method, *akwarglist, **kwargs)
[32m--> [39m[32m371[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(
[32m    372[39m     method, kwargs=additional_kwargs, retries=[38;5;28mself[39m.retries
[32m    373[39m )

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/s3fs/core.py:146[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    145[39m err = translate_boto_error(err)
[32m--> [39m[32m146[39m [38;5;28;01mraise[39;00m err

[31mOSError[39m: [Errno 22] An error occurred (MissingContentLength) when calling the PutObject operation: Unknown

The above exception was the direct cause of the following exception:

[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[10][39m[32m, line 3[39m
[32m      1[39m [38;5;66;03m# Step 4c (continued): write the template with specific encodings[39;00m
[32m      2[39m outfile = fs_write.get_mapper(fname)
[32m----> [39m[32m3[39m [43mtemplate[49m[43m.[49m[43mto_zarr[49m[43m([49m
[32m      4[39m [43m    [49m[43moutfile[49m[43m,[49m
[32m      5[39m [43m    [49m[43mcompute[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m      6[39m [43m    [49m[43mencoding[49m[43m [49m[43m=[49m[43m  [49m[43m{[49m[43m                                  [49m[38;5;66;43;03m# encodings sets data types for the disk store[39;49;00m
[32m      7[39m [43m        [49m[33;43m'[39;49m[33;43mstation_nm[39;49m[33;43m'[39;49m[43m:[49m[43m  [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m        [49m[43mdtype[49m[43m=[49m[33;43m'[39;49m[33;43m<U64[39;49m[33;43m'[39;49m[43m)[49m[43m,[49m[43m [49m
[32m      8[39m [43m        [49m[33;43m'[39;49m[33;43malt_datum_cd[39;49m[33;43m'[39;49m[43m:[49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m        [49m[43mdtype[49m[43m=[49m[33;43m'[39;49m[33;43m<U6[39;49m[33;43m'[39;49m[43m)[49m[43m,[49m
[32m      9[39m [43m        [49m[33;43m'[39;49m[33;43malt_acy_va[39;49m[33;43m'[39;49m[43m:[49m[43m  [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[43m-[49m[32;43m2147483647[39;49m[43m,[49m[43m [49m[43mdtype[49m[43m=[49m[43mnp[49m[43m.[49m[43mint32[49m[43m)[49m[43m,[49m
[32m     10[39m [43m        [49m[33;43m'[39;49m[33;43malt_va[39;49m[33;43m'[39;49m[43m:[49m[43m      [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[32;43m9.96921e+36[39;49m[43m,[49m[43m [49m[43mdtype[49m[43m=[49m[43mnp[49m[43m.[49m[43mfloat32[49m[43m)[49m[43m,[49m
[32m     11[39m [43m        [49m[33;43m'[39;49m[33;43mdec_lat_va[39;49m[33;43m'[39;49m[43m:[49m[43m  [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m        [49m[43mdtype[49m[43m=[49m[43mnp[49m[43m.[49m[43mfloat32[49m[43m)[49m[43m,[49m
[32m     12[39m [43m        [49m[33;43m'[39;49m[33;43mdec_long_va[39;49m[33;43m'[39;49m[43m:[49m[43m [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m        [49m[43mdtype[49m[43m=[49m[43mnp[49m[43m.[49m[43mfloat32[49m[43m)[49m[43m,[49m
[32m     13[39m [43m        [49m[33;43m'[39;49m[33;43mstreamflow[39;49m[33;43m'[39;49m[43m:[49m[43m  [49m[38;5;28;43mdict[39;49m[43m([49m[43m [49m[43m_FillValue[49m[43m=[49m[32;43m9.96921e+36[39;49m[43m,[49m[43m [49m[43mdtype[49m[43m=[49m[43mnp[49m[43m.[49m[43mfloat32[49m[43m)[49m
[32m     14[39m [43m    [49m[43m}[49m[43m,[49m
[32m     15[39m [43m    [49m[43mconsolidated[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m                             [49m[38;5;66;43;03m# Consolidate metadata[39;49;00m
[32m     16[39m [43m    [49m[43mmode[49m[43m=[49m[33;43m'[39;49m[33;43mw[39;49m[33;43m'[39;49m
[32m     17[39m [43m)[49m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/xarray/core/dataset.py:2621[39m, in [36mDataset.to_zarr[39m[34m(self, store, chunk_store, mode, synchronizer, group, encoding, compute, consolidated, append_dim, region, safe_chunks, storage_options, zarr_version, zarr_format, write_empty_chunks, chunkmanager_store_kwargs)[39m
[32m   2453[39m [38;5;250m[39m[33;03m"""Write dataset contents to a zarr group.[39;00m
[32m   2454[39m 
[32m   2455[39m [33;03mZarr chunks are determined in the following way:[39;00m
[32m   (...)[39m[32m   2617[39m [33;03m    The I/O user guide, with more details and examples.[39;00m
[32m   2618[39m [33;03m"""[39;00m
[32m   2619[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mxarray[39;00m[34;01m.[39;00m[34;01mbackends[39;00m[34;01m.[39;00m[34;01mapi[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m to_zarr
[32m-> [39m[32m2621[39m [38;5;28;01mreturn[39;00m [43mto_zarr[49m[43m([49m[43m  [49m[38;5;66;43;03m# type: ignore[call-overload,misc][39;49;00m
[32m   2622[39m [43m    [49m[38;5;28;43mself[39;49m[43m,[49m
[32m   2623[39m [43m    [49m[43mstore[49m[43m=[49m[43mstore[49m[43m,[49m
[32m   2624[39m [43m    [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m   2625[39m [43m    [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m   2626[39m [43m    [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   2627[39m [43m    [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m   2628[39m [43m    [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m   2629[39m [43m    [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m
[32m   2630[39m [43m    [49m[43mcompute[49m[43m=[49m[43mcompute[49m[43m,[49m
[32m   2631[39m [43m    [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m   2632[39m [43m    [49m[43mappend_dim[49m[43m=[49m[43mappend_dim[49m[43m,[49m
[32m   2633[39m [43m    [49m[43mregion[49m[43m=[49m[43mregion[49m[43m,[49m
[32m   2634[39m [43m    [49m[43msafe_chunks[49m[43m=[49m[43msafe_chunks[49m[43m,[49m
[32m   2635[39m [43m    [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m   2636[39m [43m    [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m   2637[39m [43m    [49m[43mwrite_empty_chunks[49m[43m=[49m[43mwrite_empty_chunks[49m[43m,[49m
[32m   2638[39m [43m    [49m[43mchunkmanager_store_kwargs[49m[43m=[49m[43mchunkmanager_store_kwargs[49m[43m,[49m
[32m   2639[39m [43m[49m[43m)[49m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/xarray/backends/api.py:2162[39m, in [36mto_zarr[39m[34m(dataset, store, chunk_store, mode, synchronizer, group, encoding, compute, consolidated, append_dim, region, safe_chunks, storage_options, zarr_version, zarr_format, write_empty_chunks, chunkmanager_store_kwargs)[39m
[32m   2159[39m     already_consolidated = [38;5;28;01mFalse[39;00m
[32m   2160[39m     consolidate_on_close = consolidated [38;5;129;01mor[39;00m consolidated [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[32m-> [39m[32m2162[39m zstore = [43mbackends[49m[43m.[49m[43mZarrStore[49m[43m.[49m[43mopen_group[49m[43m([49m
[32m   2163[39m [43m    [49m[43mstore[49m[43m=[49m[43mmapper[49m[43m,[49m
[32m   2164[39m [43m    [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   2165[39m [43m    [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m   2166[39m [43m    [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m   2167[39m [43m    [49m[43mconsolidated[49m[43m=[49m[43malready_consolidated[49m[43m,[49m
[32m   2168[39m [43m    [49m[43mconsolidate_on_close[49m[43m=[49m[43mconsolidate_on_close[49m[43m,[49m
[32m   2169[39m [43m    [49m[43mchunk_store[49m[43m=[49m[43mchunk_mapper[49m[43m,[49m
[32m   2170[39m [43m    [49m[43mappend_dim[49m[43m=[49m[43mappend_dim[49m[43m,[49m
[32m   2171[39m [43m    [49m[43mwrite_region[49m[43m=[49m[43mregion[49m[43m,[49m
[32m   2172[39m [43m    [49m[43msafe_chunks[49m[43m=[49m[43msafe_chunks[49m[43m,[49m
[32m   2173[39m [43m    [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m   2174[39m [43m    [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m   2175[39m [43m    [49m[43mwrite_empty[49m[43m=[49m[43mwrite_empty_chunks[49m[43m,[49m
[32m   2176[39m [43m    [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m   2177[39m [43m[49m[43m)[49m
[32m   2179[39m dataset = zstore._validate_and_autodetect_region(dataset)
[32m   2180[39m zstore._validate_encoding(encoding)

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/xarray/backends/zarr.py:693[39m, in [36mZarrStore.open_group[39m[34m(cls, store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, append_dim, write_region, safe_chunks, zarr_version, zarr_format, use_zarr_fill_value_as_mask, write_empty)[39m
[32m    669[39m [38;5;129m@classmethod[39m
[32m    670[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_group[39m(
[32m    671[39m     [38;5;28mcls[39m,
[32m   (...)[39m[32m    686[39m     write_empty: [38;5;28mbool[39m | [38;5;28;01mNone[39;00m = [38;5;28;01mNone[39;00m,
[32m    687[39m ):
[32m    688[39m     (
[32m    689[39m         zarr_group,
[32m    690[39m         consolidate_on_close,
[32m    691[39m         close_store_on_close,
[32m    692[39m         use_zarr_fill_value_as_mask,
[32m--> [39m[32m693[39m     ) = [43m_get_open_params[49m[43m([49m
[32m    694[39m [43m        [49m[43mstore[49m[43m=[49m[43mstore[49m[43m,[49m
[32m    695[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    696[39m [43m        [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m    697[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m    698[39m [43m        [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m    699[39m [43m        [49m[43mconsolidate_on_close[49m[43m=[49m[43mconsolidate_on_close[49m[43m,[49m
[32m    700[39m [43m        [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m    701[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m    702[39m [43m        [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m    703[39m [43m        [49m[43muse_zarr_fill_value_as_mask[49m[43m=[49m[43muse_zarr_fill_value_as_mask[49m[43m,[49m
[32m    704[39m [43m        [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m    705[39m [43m    [49m[43m)[49m
[32m    707[39m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m(
[32m    708[39m         zarr_group,
[32m    709[39m         mode,
[32m   (...)[39m[32m    716[39m         use_zarr_fill_value_as_mask,
[32m    717[39m     )

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/xarray/backends/zarr.py:1735[39m, in [36m_get_open_params[39m[34m(store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, zarr_version, use_zarr_fill_value_as_mask, zarr_format)[39m
[32m   1731[39m     [38;5;28;01mif[39;00m _zarr_v3():
[32m   1732[39m         [38;5;66;03m# we have determined that we don't want to use consolidated metadata[39;00m
[32m   1733[39m         [38;5;66;03m# so we set that to False to avoid trying to read it[39;00m
[32m   1734[39m         open_kwargs[[33m"[39m[33muse_consolidated[39m[33m"[39m] = [38;5;28;01mFalse[39;00m
[32m-> [39m[32m1735[39m     zarr_group = [43mzarr[49m[43m.[49m[43mopen_group[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mopen_kwargs[49m[43m)[49m
[32m   1736[39m close_store_on_close = zarr_group.store [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m store
[32m   1738[39m [38;5;66;03m# we use this to determine how to handle fill_value[39;00m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/zarr/hierarchy.py:1581[39m, in [36mopen_group[39m[34m(store, mode, cache_attrs, synchronizer, path, chunk_store, storage_options, zarr_version, meta_array)[39m
[32m   1578[39m         [38;5;28;01mraise[39;00m GroupNotFoundError(path)
[32m   1580[39m [38;5;28;01melif[39;00m mode == [33m"[39m[33mw[39m[33m"[39m:
[32m-> [39m[32m1581[39m     [43minit_group[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43moverwrite[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mpath[49m[43m=[49m[43mpath[49m[43m,[49m[43m [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m)[49m
[32m   1583[39m [38;5;28;01melif[39;00m mode == [33m"[39m[33ma[39m[33m"[39m:
[32m   1584[39m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m contains_group(store, path=path):

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/zarr/storage.py:682[39m, in [36minit_group[39m[34m(store, overwrite, path, chunk_store)[39m
[32m    679[39m     store[[33m"[39m[33mzarr.json[39m[33m"[39m] = store._metadata_class.encode_hierarchy_metadata([38;5;28;01mNone[39;00m)  [38;5;66;03m# type: ignore[39;00m
[32m    681[39m [38;5;66;03m# initialise metadata[39;00m
[32m--> [39m[32m682[39m [43m_init_group_metadata[49m[43m([49m[43mstore[49m[43m=[49m[43mstore[49m[43m,[49m[43m [49m[43moverwrite[49m[43m=[49m[43moverwrite[49m[43m,[49m[43m [49m[43mpath[49m[43m=[49m[43mpath[49m[43m,[49m[43m [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m)[49m
[32m    684[39m [38;5;28;01mif[39;00m store_version == [32m3[39m:
[32m    685[39m     [38;5;66;03m# TODO: Should initializing a v3 group also create a corresponding[39;00m
[32m    686[39m     [38;5;66;03m#       empty folder under data/root/? I think probably not until there[39;00m
[32m    687[39m     [38;5;66;03m#       is actual data written there.[39;00m
[32m    688[39m     [38;5;28;01mpass[39;00m

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/zarr/storage.py:743[39m, in [36m_init_group_metadata[39m[34m(store, overwrite, path, chunk_store)[39m
[32m    741[39m key = _prefix_to_group_key(store, _path_to_prefix(path))
[32m    742[39m [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(store, [33m"[39m[33m_metadata_class[39m[33m"[39m):
[32m--> [39m[32m743[39m     [43mstore[49m[43m[[49m[43mkey[49m[43m][49m = store._metadata_class.encode_group_metadata(meta)
[32m    744[39m [38;5;28;01melse[39;00m:
[32m    745[39m     store[key] = encode_group_metadata(meta)

[36mFile [39m[32m/home/conda/hytest/738ff346-1752093942-203-pangeo/lib/python3.11/site-packages/zarr/storage.py:1473[39m, in [36mFSStore.__setitem__[39m[34m(self, key, value)[39m
[32m   1471[39m     [38;5;28mself[39m.fs.invalidate_cache([38;5;28mself[39m.fs._parent(path))
[32m   1472[39m [38;5;28;01mexcept[39;00m [38;5;28mself[39m.exceptions [38;5;28;01mas[39;00m e:
[32m-> [39m[32m1473[39m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01me[39;00m

[31mKeyError[39m: '.zgroup'

